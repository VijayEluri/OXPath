/**
 * 
 */
package uk.ac.ox.comlab.oxpath;

/**
 * Class that builds objects for Next Link type XQuery expressions
 * @author AndrewJSel
 *
 */
public class NextXQueryFactory extends XQueryFactory {
	
	/**
	 * Constructor that builds NextXQueryFactory objects
	 * @param nextLinkName value of text for next link or "image" keyword if non-textual
	 * @param nextLinkPath navigation-based XPath expression for next link
	 * @throws BadDataException in case of malformed XPath expression
	 */
	public NextXQueryFactory(String nextLinkName, String nextLinkPath) throws BadDataException {
		super();
		String formattedNextLinkPath = XQueryHelper.addXHTMLNamespacePrefixes(nextLinkPath);
		//create existsNextPage and nextPage queries
		this.existsNextPage = this.getBoilerPlate();
		this.nextPage = this.getBoilerPlate();
		if (nextLinkName.equals(NONTEXTLINKKEYWORD)) {
			//TODO: Fix this when better method is discovered
			this.existsNextPage += ("string(" + formattedNextLinkPath + ")");
		}
		else {//XQuery that tests if the textual value of the node resulting from the given XPath expression contains the key value 
			this.existsNextPage += ("contains(string(" + formattedNextLinkPath + "),\"" + nextLinkName + "\")");
		}
		//creates XQuery that will return string of node at path (with normalized whitespace per XPath function)
		this.nextPage += ("normalize-space(string(" + formattedNextLinkPath + "/@href))");
	}
	
	/**
	 * Method for getting the query that determines if the next page exists
	 */
	public String getExistsNextPageQuery() {
		return this.existsNextPage;
	}
	
	/**
	 * Method for getting the query that finds the link that retrieves the next page
	 */
	public String getNextPageQuery() {
		return this.nextPage;
	}

	/**
	 * private instance field for boolean XQuery determining if next field exists
	 */
	private String existsNextPage;
	
	/**
	 * private instance field for XQuery returning next page 
	 */
	private String nextPage;
	
	/**
	 * String representing keyword for non-text-based next link
	 */
	public final static String NONTEXTLINKKEYWORD = "image";
}
